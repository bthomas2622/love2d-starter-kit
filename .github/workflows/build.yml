name: Build LOVE Game

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read
  issues: read

env:
  # Product Information
  PRODUCT_NAME: "LOVE2D Starter Kit"
  # Build Configuration
  OUTPUT_FOLDER: "./build"
  PRODUCT_FILE: "love-2d-starter-kit"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive
            
      - name: Create output directory
        run: mkdir -p build
        
      - name: Build LOVE package
        run: |
          # Make the build script executable and run it
          chmod +x ./utils/build-love.sh
          ./utils/build-love.sh
            
      - name: Upload .love artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_FILE }}.love
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_FILE }}.love
              
      - name: Create tools directory
        run: mkdir -p ./tools

      - name: Install Tools
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick && \
          sudo apt-get install -y unzip && \
          sudo apt-get install -y curl && \
          sudo apt-get install -y rsync
        
      - name: Build HTML package
        run: |
          curl -fsSL --retry 5 --retry-delay 15 --connect-timeout 30 --max-time 300 https://github.com/2dengine/love.js/archive/refs/heads/main.zip -o ./tools/love.js.zip || exit 1
          unzip -q ./tools/love.js.zip -d ./tools/
          
          # Create a custom index.html for itch.io compatibility (dynamic loading approach)
          cat > ./tools/love.js-main/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <title>${{ env.PRODUCT_NAME }}</title>
              <style>
                  body { 
                      margin: 0; 
                      padding: 0; 
                      background: #000; 
                      display: flex;
                      justify-content: center;
                      align-items: center;
                      min-height: 100vh;
                      font-family: Arial, sans-serif;
                  }
                  canvas { 
                      display: block; 
                      max-width: 100%;
                      max-height: 100%;
                  }
                  #loading {
                      color: white;
                      text-align: center;
                  }
              </style>
          </head>
          <body>
              <div id="loading">Loading game...</div>
              <script>
                  window.addEventListener('DOMContentLoaded', function() {
                      document.getElementById('loading').style.display = 'none';
                      var script = document.createElement('script');
                      script.src = 'player.js?g=game.love&n=1';
                      script.onerror = function() {
                          document.getElementById('loading').innerHTML = 'Error loading game. Please check console for details.';
                          document.getElementById('loading').style.display = 'block';
                      };
                      document.body.appendChild(script);
                  });
              </script>
          </body>
          </html>
          EOF
          
          # Generate favicon if icon exists, otherwise use a default from existing assets
          if [ -f ./assets/icon.png ]; then
            convert ./assets/icon.png -define icon:auto-resize="256,128,96,64,48,32,24,16" ./tools/love.js-main/favicon.ico
          else
            echo "Warning: No icon found. Skipping favicon generation."
          fi
          
          # Create output directory and copy files
          mkdir -p "${{ env.OUTPUT_FOLDER }}/${PRODUCT_FILE}-html"
          
          # Copy essential love.js files (keep .htaccess for CORS headers)
          rsync -a --exclude='*.git*' --exclude='*.md' --exclude='*.txt' \
            ./tools/love.js-main/ \
            ${{ env.OUTPUT_FOLDER }}/${PRODUCT_FILE}-html/
          
          # Copy the game file
          cp -v ${{ env.OUTPUT_FOLDER }}/${PRODUCT_FILE}.love ${{ env.OUTPUT_FOLDER }}/${PRODUCT_FILE}-html/game.love
          
          # Create zip for upload
          7z a -tzip \
            "${{ env.OUTPUT_FOLDER }}/${PRODUCT_FILE}-html.zip" \
            "${{ env.OUTPUT_FOLDER }}/${PRODUCT_FILE}-html"/*
            
      - name: Upload HTML artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_FILE }}-html
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_FILE }}-html